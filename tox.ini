[tox]
minversion = 2.3.1
envlist = py{2,26,27,3,33,34,35,36,37},pypy

[travis]
; python = 3.6: py36,lint
unignore_outcomes = True

[testenv]
alwayscopy = True
setenv =
  BASEPYTHON = python3.6
  MODULEPATH = setup.py pyLoad.py pyload tests
  MODULELIST = setup.py,pyLoad.py,pyload,tests
deps = {[testenv:compileall]deps}
commands = {[testenv:compileall]commands}

[testenv:venv]
deps = .
commands = {posargs}

[testenv:compileall]
skip_install = True
deps =
commands = python -m compileall -f -q {env:MODULEPATH}

[testenv:coverage]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  {[testenv]deps}
  coverage>=4.0
commands =
  coverage run --rcfile=tox.ini {[testenv]commands}
  coverage combine
  coverage report --rcfile=tox.ini

[testenv:xenon]
basepython = {env:BASEPYTHON}
skip_install = True
deps = xenon
commands =
  xenon -bC -mB -aA setup.py
  xenon -bC -mB -aA pyLoad.py
  xenon -bC -mB -aA pyload
  xenon -bC -mB -aA tests

# Linters

[testenv:flake8]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  flake8
  ; ebb-lint
  ; flake8-bugbear
  ; flake8-commas
  flake8-docstrings
  flake8-future-import
  flake8-import-order
  flake8-mock
  ; flake8-mypy
  flake8-pep3101
  flake8-print
  flake8-quotes
  flake8-string-format
  flake8-tidy-imports
  flake8-tuple
  pep8-naming
commands = flake8 {env:MODULEPATH}

[testenv:pylint]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  astroid
  isort
  pylint
commands = pylint --rcfile=tox.ini {env:MODULEPATH}

[testenv:bandit]
basepython = {env:BASEPYTHON}
skip_install = True
deps = bandit
commands = bandit --ini tox.ini {env:MODULEPATH}

[testenv:prospector]
basepython = {env:BASEPYTHON}
skip_install = True
deps = prospector
commands = prospector --pylint-config-file=tox.ini {env:MODULEPATH}

[testenv:lint]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  {[testenv:flake8]deps}
  {[testenv:pylint]deps}
  {[testenv:bandit]deps}
  ; {[testenv:doc8]deps}
commands =
  {[testenv:flake8]commands}
  {[testenv:pylint]commands}
  {[testenv:bandit]commands}
  ; {[testenv:doc8]commands}

# Documentation

[testenv:check-manifest]
basepython = {env:BASEPYTHON}
skip_install = True
deps = check-manifest
commands = check-manifest

[testenv:doc8]
basepython = {env:BASEPYTHON}
skip_install = True
deps = doc8
commands = doc8 docs/source

[testenv:readme]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
commands = python setup.py check -r -s

[testenv:sphinx]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
commands = python setup.py build_sphinx -E -W

[testenv:makedoc]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  {[testenv:readme]deps}
  {[testenv:sphinx]deps}
commands =
  {[testenv:readme]commands}
  {[testenv:sphinx]commands}

# Release

[testenv:dist]
basepython = {env:BASEPYTHON}
skip_install = True
deps = wheel
commands = python setup.py -q sdist bdist_wheel

[testenv:upload_dist]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  {[testenv:dist]deps}
  twine>=1.5.0
commands =
  {[testenv:dist]commands}
  twine upload --skip-existing dist/*

# Translations

[testenv:upload_messages]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
commands =

# Settings

[coverage:report]
; ignore_errors = 1
show_missing = 1

[coverage:run]
source = {env:MODULELIST}
parallel = 1
concurrency = multiprocessing

[bandit]
recursive = 1
level = 3
confidence = 3
skips = B404,B603,B607

[doc8]
allow-long-titles = 1
; verbose = 1

[flake8]
ignore = D203
exclude = *.py[cod],.*,__pycache__,build,dist,docs/source/conf.py,old
max-complexity = 10
import-order-style = google
application-import-names = {env:MODULELIST}
statistics = True
; show-source = True
; doctests = True

[pylint]
ignore = .tox/*,build/*,docs/*,env/*,get-pip.py
reports = no
errors-only = 1
