[tox]
minversion = 2.3.1
envlist = py{2,26,27,3,33,34,35,36,37}

[travis]
python = 2.7: py27,lint,xenon,coverage
unignore_outcomes = True

[testenv]
alwayscopy = True
usedevelop = True
deps = {[testenv:compileall]deps}
commands = {[testenv:compileall]commands}

[testenv:venv]
usedevelop = False
deps = .
commands = {posargs}

[testenv:compileall]
; skip_install = True
deps =
commands = python -m compileall -f -q .

[testenv:coverage]
basepython = python3
; skip_install = True
deps = coverage >= 4.0
commands =
  coverage run --rcfile=tox.ini setup.py test
  coverage combine
  coverage report --rcfile=tox.ini

[testenv:xenon]
basepython = python3
; skip_install = True
deps = xenon
commands = xenon -bC -mB -aA pyload

# Linters

[testenv:flake8]
basepython = python3
; skip_install = True
deps =
  flake8
  ebb-lint
  flake8-bugbear
  ; flake8-commas
  flake8-docstrings
  flake8-future-import
  flake8-import-order
  flake8-mock
  flake8-mypy
  flake8-pep3101
  flake8-print
  flake8-quotes
  flake8-string-format
  flake8-tidy-imports
  flake8-tuple
  pep8-naming
  ; radon
commands = flake8 pyload

[testenv:pylint]
basepython = python3
; skip_install = True
deps =
  astroid
  isort
  pylint
commands = pylint --rcfile=tox.ini pyload

[testenv:bandit]
basepython = python3
; skip_install = True
deps = bandit
commands = bandit --ini tox.ini pyload

[testenv:doc8]
basepython = python3
; skip_install = True
deps = doc8
commands = doc8 docs/source/

[testenv:lint]
; skip_install = True
deps =
  {[testenv:flake8]deps}
  {[testenv:pylint]deps}
  {[testenv:bandit]deps}
  {[testenv:doc8]deps}
commands =
  {[testenv:flake8]commands}
  {[testenv:pylint]commands}
  {[testenv:bandit]commands}
  {[testenv:doc8]commands}

# Documentation

[testenv:readme]
basepython = python3
; skip_install = True
deps =
commands = python setup.py check -r -s

[testenv:docs]
basepython = python3
; skip_install = True
deps =
commands = python setup.py build_sphinx

[testenv:makedoc]
; skip_install = True
deps =
  {[testenv:readme]deps}
  {[testenv:docs]deps}
commands =
  {[testenv:readme]commands}
  {[testenv:docs]commands}

# Release

[testenv:build]
basepython = python3
; skip_install = True
deps = wheel
commands = python setup.py -q sdist bdist_wheel

[testenv:release]
basepython = python3
; skip_install = True
deps =
  {[testenv:build]deps}
  twine >= 1.5.0
commands =
  {[testenv:build]commands}
  twine upload --skip-existing dist/*

# Settings

[coverage:report]
; ignore_errors = 1
show_missing = 1

[coverage:run]
source = pyload
parallel = 1
concurrency = multiprocessing

[bandit]
recursive = 1
level = 3
confidence = 3
skips = B404,B603,B607

; [doc8]
; allow-long-titles = 1
; verbose = 1

[flake8]
ignore = D203
exclude = *.py[cod],.cache,.git,.tox,.venv,__pycache__,build,dist,docs/source/conf.py,old
max-complexity = 10
; radon-max-cc = 5
; radon-no-assert = 1
import-order-style = google
application-import-names = pyload
statistics = True

[pylint]
ignore = .tox/*,build/*,docs/*,env/*,get-pip.py
reports = no
errors-only = 1
