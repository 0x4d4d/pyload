[tox]
minversion = 2.3.1
envlist = py{2,26,27,3,33,34,35,36,37},pypy

[travis]
python = 3.5: py35,error,complexity
unignore_outcomes = True

[testenv]
alwayscopy = True
setenv =
  BASEPYTHON = python3.5
  TESTENVARGS = setup.py pyLoad.py pyload tests
  TESTENVLIST = setup.py,pyLoad.py,pyload,tests
deps = {[testenv:compileall]deps}
commands = {[testenv:compileall]commands}


# Main routines

[testenv:venv]
deps = .
commands = {posargs}

[testenv:compileall]
skip_install = True
deps =
commands = python -m compileall -f -q {env:TESTENVARGS}

[testenv:complexity]
basepython = {env:BASEPYTHON}
skip_install = True
deps = {[testenv:xenon]deps}
commands = {[testenv:xenon]commands} -bD -mB -aA

[testenv:coverage]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  {[testenv:test]deps}
  coverage>=4.0
commands =
  coverage run --rcfile=tox.ini {[testenv:test]commands}
  coverage combine
  coverage report --rcfile=tox.ini

[testenv:debug]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  {[testenv:error]deps}
  {[testenv:risk]deps}
commands =
  {[testenv:error]commands}
  {[testenv:risk]commands}

[testenv:duplication]
basepython = {env:BASEPYTHON}
skip_install = True
deps = {[testenv:pylint]deps}
commands = {[testenv:pylint]commands} --disable=all --enable=duplicate-code

[testenv:error]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  {[testenv:compileall]deps}
  {[testenv:pylint]deps}
  {[testenv:mypy]deps}
commands =
  {[testenv:compileall]commands}
  {[testenv:pylint]commands} -E --confidence=HIGH,INFERENCE,INFERENCE_FAILURE
  {[testenv:mypy]commands}

[testenv:maintainability]
basepython = {env:BASEPYTHON}
skip_install = True
deps = {[testenv:radon]deps}
commands = radon mi -s --max C {env:TESTENVARGS}

[testenv:risk]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  {[testenv:prospector]deps}
  {[testenv:bandit]deps}
commands =
  {[testenv:prospector]commands} -T -8 -s low
  {[testenv:bandit]commands}

[testenv:style]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  {[testenv:flake8]deps}
  ; ebb-lint
  ; flake8-bugbear
  ; flake8-commas
  flake8-docstrings
  flake8-future-import
  flake8-import-order
  flake8-mock
  flake8-pep3101
  flake8-print
  flake8-quotes
  flake8-string-format
  flake8-tidy-imports
  flake8-tuple
  pep8-naming
  radon
commands = {[testenv:flake8]commands}

[testenv:test]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
commands =


# Tools

[testenv:bandit]
basepython = {env:BASEPYTHON}
skip_install = True
deps = bandit
commands = bandit --ini tox.ini {posargs} {env:TESTENVARGS}

[testenv:flake8]
basepython = {env:BASEPYTHON}
skip_install = True
deps = flake8
commands = flake8 {posargs} {env:TESTENVARGS}

[testenv:mypy]
basepython = {env:BASEPYTHON}
skip_install = True
deps = mypy
commands = mypy --config-file tox.ini {posargs} {env:TESTENVARGS}

[testenv:prospector]
basepython = {env:BASEPYTHON}
skip_install = True
deps = prospector
commands = prospector {posargs} {env:TESTENVARGS}

[testenv:pylint]
basepython = {env:BASEPYTHON}
skip_install = True
deps = pylint
commands = pylint {posargs} {env:TESTENVARGS}

[testenv:radon]
basepython = {env:BASEPYTHON}
skip_install = True
deps = radon
commands = radon {posargs} {env:TESTENVARGS}

[testenv:xenon]
basepython = {env:BASEPYTHON}
skip_install = True
deps = xenon
commands =
  xenon {posargs} setup.py
  xenon {posargs} pyLoad.py
  xenon {posargs} pyload
  xenon {posargs} tests


# Documentation

[testenv:check-manifest]
basepython = {env:BASEPYTHON}
skip_install = True
deps = check-manifest
commands = check-manifest -v {posargs}

[testenv:doc8]
basepython = {env:BASEPYTHON}
skip_install = True
deps = doc8
commands = doc8 {posargs} docs/source


# Packaging

[testenv:build]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
commands =
  python setup.py configure
  python setup.py build

[testenv:build_sphinx]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
commands = python setup.py build_sphinx -E -W

[testenv:check]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
commands = python setup.py check -r -s

[testenv:dist]
basepython = {env:BASEPYTHON}
skip_install = True
deps = wheel
commands = python setup.py -q sdist bdist_wheel

[testenv:upload_dist]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
  {[testenv:dist]deps}
  twine>=1.5.0
commands =
  {[testenv:dist]commands}
  twine upload --skip-existing dist/*

[testenv:upload_messages]
basepython = {env:BASEPYTHON}
skip_install = True
deps =
commands =


# Tools config

[coverage:report]
; ignore_errors = True
show_missing = True

[coverage:run]
concurrency = multiprocessing
parallel = True
source = {env:TESTENVLIST}

[bandit]
confidence = 3
level = 3
recursive = True
skips = B404,B603,B607

[doc8]
allow-long-titles = True
; verbose = True

[flake8]
application-import-names = {env:TESTENVLIST}
; doctests = True
exclude = *.py[codi],.*,__pycache__,build,dist,docs/source/conf.py,env,get-pip.py,old
ignore = D203
import-order-style = google
max-complexity = 10
radon-max-cc = 10
; show-source = True
statistics = True

[mypy]
disallow_untyped_defs = True
follow_imports = silent
ignore_missing_imports = True
incremental = True
